{"version":3,"sources":["js/task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","promise","Promise","resolve","reject","setTimeout","first","id","logSuccess","time","console","log","logError","warn","amount","then","catch"],"mappings":";AAAA,IAAMA,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAAAC,GAChBC,IAAAA,EAAQR,EAA0B,IAAK,KAWtCS,OAVS,IAAIC,QAAQ,SAACC,EAASC,GACpCC,WAAW,WACUV,KAAKE,SAAW,IAGjCM,EAAQ,CAAEG,MAAMP,EAAYQ,GAAIP,MAAAA,IAElCI,EAAOL,EAAYQ,KAChBP,MAKHQ,EAAa,SAA8B,GAArBD,IAAAA,EAAND,EAAAA,MAAgBG,EAANT,EAAAA,MAC9BU,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBE,kBAAAA,OAAAA,EAA9C,QAGIG,EAAW,SAAAL,GAEfG,QAAQG,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAaFT,EAAgB,CAAES,GAAI,GAAIO,OAAQ,MAAOC,KAAKP,GAAYQ,MAAMJ,GAEhEd,EAAgB,CAAES,GAAI,GAAIO,OAAQ,MAAOC,KAAKP,GAAYQ,MAAMJ,GAEhEd,EAAgB,CAAES,GAAI,GAAIO,OAAQ,KAAMC,KAAKP,GAAYQ,MAAMJ,GAE/Dd,EAAgB,CAAES,GAAI,GAAIO,OAAQ,MAAOC,KAAKP,GAAYQ,MAAMJ","file":"task-3.04e75583.js","sourceRoot":"..\\src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = transaction => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n  const promise = new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({ first:transaction.id, delay });\r\n      } \r\n      reject(transaction.id);\r\n      }, delay);\r\n  });\r\n  return promise;\r\n};\r\n\r\nconst logSuccess = ({ first:id, delay:time }) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  // console.log(`Error processing transaction ${id}. Please try again later.`);\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n */\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);"]}